{"version":3,"sources":["firebase/config.js","helpers/add-delUsers.js","components/TextInput.js","components/Validations.js","helpers/columnsBase.js","helpers/loadUsers.js","components/UsersDynamics.js","hooks/useData.js","App.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","console","log","addUser","values","a","addDoc","collection","name","lastName","email","docRef","id","error","deleteUser","deleteDoc","doc","TextInput","label","props","useField","field","meta","className","style","marginLeft","touched","validateAdd","errorsAdd","length","validateDel","errorsDel","columnsBase","selector","row","sortable","loadUsers","getDocs","querySnapshot","users","forEach","snapChild","push","data","FormikAdd","setRefreshUser","initialValues","validate","onSubmit","resetForm","type","FormikDel","DataTables","refreshUser","usersNew","useState","state","setState","useEffect","then","useData","user","columns","title","pagination","fixedHeaders","fixedHeaderScrollHeight","role","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.60dd93bb.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n\n// eslint-disable-next-line no-unused-vars\nconst firebaseApp = initializeApp({\n    apiKey: \"AIzaSyCc912ZTvsUEPzcZkKF0Up1EWRdDCcbl9w\",\n    authDomain: \"users-dynamics.firebaseapp.com\",\n    projectId: \"users-dynamics\",\n    storageBucket: \"users-dynamics.appspot.com\",\n    messagingSenderId: \"1048194787397\",\n    appId: \"1:1048194787397:web:b679f784793bda15359b2c\"\n  });\n\nconst db = getFirestore();\nconsole.log('Firebase Configurated');\n\nexport default db;\n","import { collection, addDoc, doc, deleteDoc } from 'firebase/firestore';\nimport db from '../firebase/config'; \n\nexport const addUser = async( values ) => {\n    try {\n      const docRef = await addDoc(collection(db, \"users\"), {\n        name: values.name,\n        lastName: values.lastName,\n        email: values.email,\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n}\n\nexport const deleteUser = async({ id }) => {\n    console.log( await deleteDoc(doc(db, \"users\", id)));\n}","import React from 'react';\nimport { useField } from 'formik';\n\n\nexport const TextInput = ({ label, ...props }) => {\n\n    const [ field, meta ] = useField( props );\n    return (\n        <div className = \"input-style\">\n            <label >{ label }:</label>\n            <input style = { {marginLeft: '0.5em'} } {...field} />\n            { meta.touched && meta.error ? <span>{meta.error}</span> : null }\n        </div>\n    )\n}\n","export const validateAdd = ( values ) => {\n    const errorsAdd = {}\n    if( !values.name ){\n        errorsAdd.name = 'Required';\n    }else if( values.name.length < 3 ){\n        errorsAdd.name = 'Name need more than 2 characters'\n    }\n    if( !values.lastName ){\n        errorsAdd.lastName = 'Required';\n    }else if( values.lastName.length < 3){\n        errorsAdd.lastName = 'LastName need more than 2 characters'\n    }\n    if( !values.email ){\n        errorsAdd.email = 'Required';\n    }\n    return errorsAdd;\n}\n\nexport const validateDel = ( values ) => {\n    const errorsDel = {}\n    if( !values.id ){\n        errorsDel.id = 'Required';\n    }\n    return errorsDel;\n}","export const columnsBase = [\n    {\n      name: 'Id',\n      selector: row => row.id,\n      sortable: true\n    },\n    {\n      name: 'Nombre',\n      selector: row => row.name,\n      sortable: true\n    },\n    {\n      name: 'Apellido',\n      selector: row => row.lastName,\n      sortable: true\n    },\n    {\n      name: 'Email',\n      selector: row => row.email,\n      sortable: true\n    },\n];","import { collection, getDocs } from 'firebase/firestore';\nimport db from '../firebase/config'; \n\nexport const loadUsers = async() => {\n\n    const querySnapshot = await getDocs(collection(db, \"users\"));\n    const users = []\n    querySnapshot.forEach((snapChild) => {\n        users.push({\n            id: snapChild.id,\n            ...snapChild.data(),\n        })\n    });\n    return users;\n  }","import DataTable from 'react-data-table-component';\nimport { Formik, Form } from 'formik';\n\nimport { addUser, deleteUser } from '../helpers/add-delUsers';\nimport { TextInput } from './TextInput';\nimport { validateAdd, validateDel } from './Validations';\nimport { columnsBase } from '../helpers/columnsBase';\nimport { useData } from '../hooks/useData';\n\nexport const FormikAdd = ({ setRefreshUser }) => {\n    return (\n        <>\n            <h5>AÃ±adir usuario</h5>\n            <Formik\n                initialValues = {{ name: '', lastName: '', email: '',}}\n                validate = { validateAdd }\n                onSubmit = { ( values, { resetForm }) => {\n                    console.log(values)\n                    addUser( values );\n                    setRefreshUser( values )\n                    resetForm();\n                } }\n            >\n                <Form>\n                    <TextInput name = \"name\" label = \"Name\"/> {/* <TextInput /> componente personalizado*/}\n                    <br />\n                    <TextInput name = \"lastName\" label = \"Lastname\"/> \n                    <br />\n                    <TextInput name = \"email\" label = \"Email\"/> \n                    <br />\n                    <button className= \"btn btn-outline-success\" type = \"submit\"> Send </button>\n                </Form>\n            </Formik>\n        </>\n    )\n}\n\nexport const FormikDel = ({ setRefreshUser }) => {\n    return(\n        <>\n            <h5>Eliminar usuario</h5>\n            <Formik\n                initialValues = {{ id: '',}}\n                validate = { validateDel }\n                onSubmit = { (values, { resetForm }) => {\n                    deleteUser( values )\n                    setRefreshUser( values );\n                    resetForm();\n                } }\n            >\n                <Form>\n                    <TextInput name = \"id\" label = \"Id\"/> {/* <TextInput /> componente personalizado*/}\n                    <br />\n                    <button className= \"btn btn-outline-danger\" type = \"submit\"> Send </button>\n                </Form>\n            </Formik>\n        </>\n    )\n}\n\nexport const DataTables = ({ refreshUser }) => {\n    const usersNew = [];\n    const { users } = useData( refreshUser );\n    users.forEach( user => {\n        usersNew.push({\n          id: user.id,\n          name: user.name,\n          lastName: user.lastName,\n          email: user.email\n        })\n    });\n    console.log( usersNew )\n\n    return (\n        <>\n          {\n            ( usersNew.length > 0) ?\n              <DataTable\n                columns = { columnsBase }\n                data = { usersNew }\n                title = \"Dynamics Solutions Users\"\n                pagination\n                fixedHeaders\n                fixedHeaderScrollHeight = \"350px\"\n              />\n            :\n              <div className = \"alert alert-success\" role=\"alert\">\n                  Por favor introduce usuarios para poder enlistarlos\n              </div>\n          }\n        </>\n    );\n}","import { useEffect, useState } from 'react';\nimport { loadUsers } from '../helpers/loadUsers';\n\nexport const useData = ( refreshUser ) => {\n    const [state, setState] = useState({\n      users: [],\n    })\n    useEffect(() =>{\n      loadUsers().then( (users) =>{\n        setState({ users })\n      })\n      \n    }, []);\n\n    useEffect(() =>{\n      loadUsers().then( (users) =>{\n        setState({ users })\n      })\n      \n    }, [ refreshUser ]);\n\n    return state\n  }","import React, { useState } from 'react';\n\nimport { DataTables, FormikAdd, FormikDel } from './components/UsersDynamics';\n\nimport './assets/styles.css';\n\n\nconst App = () => {\n  const [ refreshUser, setRefreshUser ] = useState('')\n  return (\n    <>\n      <div className = \"main\">\n        <div className = \"main__row1 d-flex\">\n          <div className = \"add__user\">\n            <FormikAdd setRefreshUser = { setRefreshUser }/>\n          </div>\n          <div className = \"remove__user \">\n            <FormikDel setRefreshUser = { setRefreshUser }/>\n          </div>\n          </div>\n        <div className = \"main__row2 table-responsive\">\n          <DataTables refreshUser = { refreshUser }/>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n\n"],"sourceRoot":""}